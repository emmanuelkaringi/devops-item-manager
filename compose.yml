services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - app-network
    expose:
      - "80"
    depends_on:
      - backend

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    networks:
      - app-network
    expose:
      - "8000"
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    env_file:
      - ./backend/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    expose:
      - "5432"

  adminer:
    image: adminer
    restart: unless-stopped
    networks:
      - app-network
    expose:
      - "8080"  # Internal port for Adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'     # HTTP
      - '443:443'   # HTTPS
      - '81:81'     # Admin interface
    volumes:
      - nginx-data:/data
      - letsencrypt-data:/etc/letsencrypt
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    name: app-network
    
volumes:
  postgres-data:
  nginx-data:
  letsencrypt-data: